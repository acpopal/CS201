---
title: "Mapping"
format: html
editor: visual
---

### Overview

Making maps is awesome and there are a ton of options/packages in R we can utiliize

Today, we are going to keep it simple and focus on the following

-   What is an sf object? Spatial feature

-   Gradient vs Discrete Coloring -\> Through geometry and binning

-   Using familiar packages, `ggplot` and `plotly` to make a world map -\> example would be janks, ggplot, and ggplotly

### Libraries

```{r}
library(ggplot2)
library(plotly)
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(scales)
options(scipen = 99) #Makes it so that everything does not go into scientific notaiton, particularly numbers
```

### Load in World Data

```{r}
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)

#"sf" stands for spatial feature
```

### Plotting

#### Static, blank world map

```{r}
ggplot(data = world) +
    geom_sf() #sf meaning "spatial feature" related to making a map
```

#### Gradient filled color map

```{r}
ggplot(data = world, aes(fill = pop_est)) +
    geom_sf()
```

#### Continuous to Discrete

```{r}
world <- world %>%
  mutate(pop_bin = cut(#mutate makes a new column
    pop_est,
    breaks = c(0, 1000000, 10000000, 100000000, 500000000, Inf),  # Define meaningful ranges
    labels = c("<1M", "1M-10M", "10M-100M", "100M-500M", ">500M"),  # Bin labels
    include.lowest = TRUE
  ))
```

```{r}
ggplot(data = world, aes(fill = pop_bin)) + #new column created was pop_bin which is now used instead of pop_est
    geom_sf() +
    scale_fill_viridis_d()
```

#### Interactivity

```{r}
world_pop_map_binned <- ggplot(data = world, aes(fill = pop_bin, label = name_long)) +
    geom_sf() +
    scale_fill_viridis_d() +
  theme_minimal()

ggplotly(world_pop_map_binned)
```

### Challenge

Can you make a binned color map showing gdp by country?

```{r}
world <- world %>%
  mutate(gdp_md_bin = cut(#mutate makes a new column
    gdp_md,
    breaks = c(0, 1000000, 10000000, 20000000, 30000000, Inf),  # Define meaningful ranges
    labels = c("<1M", "1M-10M", "10M-20M", "20M-30M", ">30M"),  # Bin labels
    include.lowest = TRUE
  )) #install packages in janks and install __?

world_gdp_map_binned <- ggplot(data = world, aes(fill = gdp_md_bin, label = name_long)) +
    geom_sf() +
    scale_fill_viridis_d() +
  theme_minimal()

ggplotly(world_gdp_map_binned)
```
